import React from "react";import {   Select,   SelectContent,   SelectItem,   SelectTrigger,   SelectValue } from "@/components/ui/select";import { HelpCircle } from "lucide-react";import {   Tooltip,  TooltipContent,  TooltipProvider,  TooltipTrigger,} from "@/components/ui/tooltip";interface ModelSelectorProps {  selectedModel: string;  onModelChange: (model: string) => void;  disabled?: boolean;}// Available Gemini models with descriptions - updated with latest modelsconst AVAILABLE_MODELS = [  {    id: "gemini-2.0-flash",    name: "Gemini 2.0 Flash",    description: "Latest model optimized for speed and efficiency. Best for most conversational needs."  },  {    id: "gemini-2.0-pro",    name: "Gemini 2.0 Pro",    description: "Latest model with advanced reasoning capabilities. Best for complex tasks."  },  {    id: "gemini-1.5-flash",    name: "Gemini 1.5 Flash",    description: "Fast, efficient model for most tasks. Lower cost, good for responsive conversations."  },  {    id: "gemini-1.5-pro",    name: "Gemini 1.5 Pro",    description: "Higher quality, better for complex reasoning and detailed responses."  }];const ModelSelector: React.FC<ModelSelectorProps> = ({  selectedModel,  onModelChange,  disabled = false}) => {  return (    <div className="flex items-center gap-2">      <Select        value={selectedModel}        onValueChange={onModelChange}        disabled={disabled}      >        <SelectTrigger className="w-[180px] text-xs h-8">          <SelectValue placeholder="Select model" />        </SelectTrigger>        <SelectContent>          {AVAILABLE_MODELS.map(model => (            <SelectItem key={model.id} value={model.id} className="text-xs">              {model.name}            </SelectItem>          ))}        </SelectContent>      </Select>            <TooltipProvider>        <Tooltip delayDuration={300}>          <TooltipTrigger asChild>            <HelpCircle className="h-4 w-4 text-muted-foreground cursor-help" />          </TooltipTrigger>          <TooltipContent className="max-w-[300px]">            <div className="space-y-2 text-xs">              <h4 className="font-semibold">Gemini Models</h4>              {AVAILABLE_MODELS.map(model => (                <div key={model.id} className="pb-1">                  <div className="font-medium">{model.name}</div>                  <div className="text-muted-foreground text-[10px]">{model.description}</div>                </div>              ))}            </div>          </TooltipContent>        </Tooltip>      </TooltipProvider>    </div>
  );
};

export default ModelSelector;
